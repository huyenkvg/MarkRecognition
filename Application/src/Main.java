
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.util.Pair;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfPoint2f;
import org.opencv.core.Point;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.highgui.HighGui;
import static org.opencv.highgui.HighGui.imshow;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import static org.opencv.imgproc.Imgproc.resize;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author HUYENKUTE
 */
public class Main extends javax.swing.JFrame {

    public static Mat image;
    public static Mat imageTraVe;
    public static Mat source;

    public static Mat imageBanDau;
    public static Mat imageREDBanDau;
    public static Mat anhMauDo;

    public ArrayList<SinhVien> listStudent;// DSSV Khi DOc File Excel
    public ArrayList<SinhVien> dssvCoDiem;// DSSV Khi DOc File ANH
    public static BuoiThi buoithiDangXet;

    public static String MaTrang;
    public static String fileExcelName = "";
    public static int mucPhanNguong = 59;
    public static int mucPNchoOdiem = 50;
    static ArrayList<Double> diemthi = new ArrayList<>();

    /**
     * Creates new form Main
     */
    public static BufferedImage Mat2BufferedImage(Mat m) {
        // Fastest code
        // output can be assigned either to a BufferedImage or to an Image
        Mat tam = m.clone();
//        Imgproc.resize(tam, tam, new Size(tam.size(WIDTH), tam.size(HEIGHT)), 0.5, 0.5);
        int type = BufferedImage.TYPE_BYTE_GRAY;
        if (tam.channels() > 1) {
            type = BufferedImage.TYPE_3BYTE_BGR;
        }
        int bufferSize = tam.channels() * tam.cols() * tam.rows();
        byte[] b = new byte[bufferSize];
        tam.get(0, 0, b); // get all the pixels
        BufferedImage image = new BufferedImage(tam.cols(), tam.rows(), type);
        final byte[] targetPixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
        System.arraycopy(b, 0, targetPixels, 0, b.length);
        return image;
    }

    public static void displayImage(Image img2, String str) {

        //BufferedImage img=ImageIO.read(new File("/HelloOpenCV/lena.png"));
        ImageIcon icon = new ImageIcon(img2);
        JFrame frame = new JFrame();
        frame.setLayout(new FlowLayout());
        frame.setTitle("" + str);
        frame.setSize(img2.getWidth(null) + 50, img2.getHeight(null) + 50);
        JLabel lbl = new JLabel();
        lbl.setIcon(icon);
        frame.add(lbl);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    public Main() {
        initComponents();
        txtLinkImg.setEditable(false);
//        txt_MaTrang.setEditable(false);
        btn_LuuVaoCSDL.setEnabled(false);
        bthCheckTrang.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnLoadImg = new javax.swing.JButton();
        btnReadScore = new javax.swing.JButton();
        lblLinkImg = new javax.swing.JLabel();
        lblLinkImg1 = new javax.swing.JLabel();
        txtLinkImg = new javax.swing.JTextField();
        txt_MaTrang = new javax.swing.JTextField();
        lblThongBao = new java.awt.Label();
        jLabelDiem = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_DSSV = new javax.swing.JTable();
        btn_LuuVaoCSDL = new javax.swing.JButton();
        bthCheckTrang = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtLinkExls = new javax.swing.JTextField();
        btnLoadFile = new javax.swing.JButton();
        lblLinkImg2 = new javax.swing.JLabel();
        btn_XuatFileExCel = new javax.swing.JButton();
        btnPhanTrangAndXuatFile = new javax.swing.JButton();
        jLabel_ThongBaoPhanTrang = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblLinkImg4 = new javax.swing.JLabel();
        lblLinkImg5 = new javax.swing.JLabel();
        lblLinkImg6 = new javax.swing.JLabel();
        txtKiThi = new javax.swing.JTextField();
        txtHocPhan = new javax.swing.JTextField();
        txtNgayThi = new javax.swing.JTextField();
        btnLayDiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐỀ TÀI: ĐỌC ĐIỂM TỪ ẢNH CHỤP PHIẾU ĐIỂM BẰNG OPENCV");
        setBackground(new java.awt.Color(102, 102, 255));

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 102));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        btnLoadImg.setBackground(new java.awt.Color(204, 153, 255));
        btnLoadImg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLoadImg.setForeground(new java.awt.Color(255, 0, 102));
        btnLoadImg.setText("Tải Ảnh Lên");
        btnLoadImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadImgActionPerformed(evt);
            }
        });

        btnReadScore.setBackground(new java.awt.Color(51, 0, 204));
        btnReadScore.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReadScore.setText("ĐỌC ẢNH");
        btnReadScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadScoreActionPerformed(evt);
            }
        });

        lblLinkImg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg.setText("Image's name:");
        lblLinkImg.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblLinkImg1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg1.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg1.setText("Mã Trang:");
        lblLinkImg1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txtLinkImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkImgActionPerformed(evt);
            }
        });

        txt_MaTrang.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_MaTrangInputMethodTextChanged(evt);
            }
        });
        txt_MaTrang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MaTrangKeyTyped(evt);
            }
        });

        lblThongBao.setForeground(new java.awt.Color(255, 51, 51));

        jLabelDiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDiem.setForeground(new java.awt.Color(255, 51, 51));
        jLabelDiem.setText("Chưa có điểm");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Danh Sách Điểm:");

        table_DSSV.setBackground(new java.awt.Color(153, 204, 255));
        table_DSSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_DSSV);

        btn_LuuVaoCSDL.setBackground(new java.awt.Color(51, 0, 204));
        btn_LuuVaoCSDL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_LuuVaoCSDL.setText("LƯU VÀO CSDL");
        btn_LuuVaoCSDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LuuVaoCSDLActionPerformed(evt);
            }
        });

        bthCheckTrang.setBackground(new java.awt.Color(153, 255, 153));
        bthCheckTrang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bthCheckTrang.setText("Reload");
        bthCheckTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthCheckTrangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblLinkImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThongBao, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_LuuVaoCSDL, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_MaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(bthCheckTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(214, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(482, 482, 482))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblLinkImg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(txtLinkImg, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnLoadImg, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnReadScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(175, 175, 175)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoadImg, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblLinkImg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLinkImg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(btnReadScore, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblThongBao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinkImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_MaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bthCheckTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDiem)
                    .addComponent(btn_LuuVaoCSDL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblThongBao.getAccessibleContext().setAccessibleName("lblThongBao");

        jTabbedPane1.addTab("XU LY ANH", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        txtLinkExls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkExlsActionPerformed(evt);
            }
        });

        btnLoadFile.setBackground(new java.awt.Color(204, 153, 255));
        btnLoadFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLoadFile.setForeground(new java.awt.Color(255, 0, 102));
        btnLoadFile.setText("Chọn file excel");
        btnLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFileActionPerformed(evt);
            }
        });

        lblLinkImg2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg2.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg2.setText("link file");
        lblLinkImg2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        btn_XuatFileExCel.setBackground(new java.awt.Color(51, 0, 204));
        btn_XuatFileExCel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_XuatFileExCel.setText("XUAT FILE");
        btn_XuatFileExCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XuatFileExCelActionPerformed(evt);
            }
        });

        btnPhanTrangAndXuatFile.setBackground(new java.awt.Color(204, 255, 255));
        btnPhanTrangAndXuatFile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPhanTrangAndXuatFile.setText("Phân Trang Trong CSDL");
        btnPhanTrangAndXuatFile.setEnabled(false);
        btnPhanTrangAndXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhanTrangAndXuatFileActionPerformed(evt);
            }
        });

        jLabel_ThongBaoPhanTrang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel_ThongBaoPhanTrang.setForeground(new java.awt.Color(255, 0, 0));
        jLabel_ThongBaoPhanTrang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ThongBaoPhanTrang.setText(" ");

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        lblLinkImg4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg4.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg4.setText("Tên Kì Thi:");
        lblLinkImg4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblLinkImg5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg5.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg5.setText("Tên Học phần:");
        lblLinkImg5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblLinkImg6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLinkImg6.setForeground(new java.awt.Color(255, 255, 255));
        lblLinkImg6.setText("Ngày Thi:");
        lblLinkImg6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txtKiThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtKiThi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtKiThi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKiThiFocusLost(evt);
            }
        });
        txtKiThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKiThiActionPerformed(evt);
            }
        });

        txtHocPhan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtHocPhan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtHocPhan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHocPhanFocusLost(evt);
            }
        });
        txtHocPhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHocPhanActionPerformed(evt);
            }
        });

        txtNgayThi.setBackground(new java.awt.Color(204, 255, 255));
        txtNgayThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNgayThi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNgayThi.setFocusable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblLinkImg6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLinkImg5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLinkImg4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKiThi, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                            .addComponent(txtHocPhan))))
                .addGap(36, 36, 36))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLinkImg4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKiThi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHocPhan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLinkImg5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgayThi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLinkImg6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        btnLayDiem.setBackground(new java.awt.Color(204, 255, 255));
        btnLayDiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLayDiem.setText("Lấy Điểm");
        btnLayDiem.setEnabled(false);
        btnLayDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLayDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnPhanTrangAndXuatFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_XuatFileExCel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLayDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_ThongBaoPhanTrang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(214, 214, 214))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(lblLinkImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtLinkExls, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnLoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLinkExls, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLinkImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoadFile))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(jLabel_ThongBaoPhanTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_XuatFileExCel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPhanTrangAndXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLayDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(166, 166, 166))
        );

        jTabbedPane1.addTab("XU LY DANH SACH", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void xuLyLocMauDo(Mat imgDauVao) {
        Mat imgr = imgDauVao.clone();
        anhMauDo = new Mat();
        //create a mask based on range
        Core.inRange(imgDauVao, new Scalar(0, 0, 170), new Scalar(255, 255, 255), anhMauDo);
        //apply the mask with color you are looking for, note here scalar is in hsv
        imgr.setTo(new Scalar(255, 255, 255), anhMauDo);
        anhMauDo = imgr;
//           displayImage(Mat2BufferedImage(imgr), "Ảnh MÀu Đỏ");
    }

    public Mat taiAnhLen() {
        return null;
    }

    public boolean TienXuLy(int mucPN) {
        int width;
        int height;
        double alpha = 0.5;
        double beta = 0.5;
        try {
//            System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
//            String imgName = FileChooser.GetImgLink();
//            txtLinkImg.setText(imgName);
//            Mat source = Imgcodecs.imread(imgName);

            // LỌC MÀU ĐỎ=======================================================
            xuLyLocMauDo(source);
            // !LỌC MÀU ĐỎ=======================================================

            Mat destination = new Mat(source.rows(), source.cols(), source.type());
            source.convertTo(destination, -1, alpha, beta);
//            displayImage(Mat2BufferedImage(destination), "Anh nhi phan dau vao");
            // chuan bi xu ly so (anh mau -> anh xam)
            destination = Processing.prepareForMainImg(destination, mucPN);
            anhMauDo = Processing.prepare(anhMauDo, 29);

   
//                   displayImage(Mat2BufferedImage(anhMauDo), "Anh nhi phan MÀU ĐỎ ");
            imageTraVe = destination;

            // output image 
        } catch (Exception e) {
            System.out.println("error: " + e.getMessage());
            e.printStackTrace();
            return false;
        }
        txt_MaTrang.setText("");
        MaTrang = "";

        btn_LuuVaoCSDL.setEnabled(false);
        return true;
    }
    private void btnLoadImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadImgActionPerformed
        // TODO add your handling code here:
        source = null;
        try {
            System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
            String imgName = FileChooser.GetImgLink();
            txtLinkImg.setText(imgName);
            source = Imgcodecs.imread(imgName);
        } catch (Exception e) {
            System.out.println("error: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Tải Ảnh không được!!!", "ERROR", JOptionPane.WARNING_MESSAGE);
            btnReadScore.setEnabled(false);
            return;
        }
        JOptionPane.showMessageDialog(null, "Tải Ảnh THÀNH CÔNG!!!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        btnReadScore.setEnabled(true);
        return;
    }//GEN-LAST:event_btnLoadImgActionPerformed

    private boolean DocDiem() {

        image = imageTraVe.clone();
        Mat imageCaiThien = anhMauDo.clone();
        try {
            // TODO add your handling code here:
            // ============[XÁC ĐỊNH VÀ CẮT MARKER]===========================================================
            ArrayList<MatOfPoint2f> squares = ForMarker.findSquares(image); // Đây là danh sách các hình vông trong ảnh, 
            // mình sẽ cắt lấy các hình chữ nhật là ô điểm thi dựa theo danh sách hcn trong squares hoặc dựa theo vị trí so với marker 
            //    displayImage(Mat2BufferedImage(Processing.debugSquares(squares, image)), "ẢNH XÁC ĐỊNH MARKER");
            MatOfPoint2f marker = null;

            marker = ForMarker.findTheMarker(squares); // đã xác định xong marker 

            if (marker == null) {
                return false;
            }

            //   displayImage(Mat2BufferedImage(Processing.debugSquares(squares, image)), "ẢNH XÁC ĐỊNH MARKER"); // xem thử
            Mat test = image, pageFrame = image, grayPageFrame, testCaiThien = imageCaiThien;
//            displayImage(Mat2BufferedImage(marker), "HUHU MARKER NÈ");
            test = Processing.RotateAndCropMarker(ForMarker.findTheRotatedsQuare(marker), test); // cắt lấy phần bên trong marker 
            // cắt phần ảnh chứa khung mã trang
            pageFrame = ForPage.CropPageArea(image);
            grayPageFrame = ForPage.CropPageArea(imageBanDau);
            //Thử cắt bằng ảnh ban đầu xem sao;
            image = Processing.RotateAndCropMarker(ForMarker.findTheRotatedsQuare(marker), imageBanDau); // cắt lấy phần bên trong marker 
            imageCaiThien = Processing.RotateAndCropMarker(ForMarker.findTheRotatedsQuare(marker), imageREDBanDau); // cắt lấy phần bên trong marker Thay ảnh ban đầu bằng ảnh màu đỏ
//            test = AdaptiveThreshold.MakeThreshold(test);

//            }
            Mat xem = test.clone();
//        resize(image, image, new Size(450,600));
//            displayImage(Mat2BufferedImage(test), "ĐÃ CẮT BỎ PHẦN RÌA, LẤY BÊN TRONG MARKER");

            //=========================== KẾT THÚC THỬ =============================================================
            // Bây giờ muốn cắt lấy Ô Điểm Thi
            //============================ THỬ ===================================================================== 
            double diem = 0;

            // ============================XÁC ĐỊNH Ô MÃ TRANG BẰNG CÁCH TÌM HÌNH CHỮ NHẬT===========================
            MatOfPoint2f rect = ForPage.findPageFrame(pageFrame); // 1 ô mã trang
            ArrayList<MatOfPoint2f> xemthu = new ArrayList<>();
            xemthu.add(rect);
//                displayImage(Mat2BufferedImage(Processing.debugSquares(xemthu, pageFrame)), "ẢNH XÁC ĐỊNH Ô MÃ TRANG");

            // Cắt nó ra:
            pageFrame = ForPage.CropPageNumberFrame(ForMarker.findTheRotatedsQuare(rect), grayPageFrame);
            //    displayImage(Mat2BufferedImage(pageFrame), "ĐÃ LẤY BÊN TRONG Ô MÃ TRANG - ẢNH BAN ĐẦU");
            ForPage.imgOMaTrangGray = pageFrame.clone();
//        pageFrame = AdaptiveThreshold.MakeThreshold(pageFrame);
            pageFrame = AdaptiveThreshold.MakeAdaptiveThreshold(pageFrame, 39);

            //   displayImage(Mat2BufferedImage(pageFrame), "[ Ô MÃ TRANG NHỊ PHÂN]");
            ForPage.imgOMaTrangBina = pageFrame.clone();
            String matrang = null;
            if (txt_MaTrang.getText().toString().trim().isEmpty()) // nếu ko nhập tay mà máy đọc
            {
                matrang = ForPage.detectingTriangle(pageFrame);
            } else // Nếu đã nhập tay
            {
                matrang = txt_MaTrang.getText().toString().trim();
            }
            if (matrang == null) // máy đọc không ra
            {
                JOptionPane.showMessageDialog(null, "Không Nhận Dạng được đúng ô mã trang, Hãy nhập mã trang thủ công!", "Thông Báo", JOptionPane.INFORMATION_MESSAGE);

                lblThongBao.setText("Format: 'MaSoBuoiThi MaTrang'");
                txt_MaTrang.requestFocus();
                btn_LuuVaoCSDL.setEnabled(false);
                return true;
            }
            // Đã có mã trang
            this.MaTrang = matrang;
            txt_MaTrang.setText(MaTrang);

            // ============================XÁC ĐỊNH Ô ĐIỂM THI BẰNG CACHWS TÌM HÌNH CHỮ NHẬT=========================
            ArrayList<MatOfPoint2f> rects = Processing.findRect(test); // Danh sách ô điểm thi
            //    System.out.println("RECTs-->SIZE: " + rects.size());
            //displayImage(Mat2BufferedImage(Processing.debugSquares(rects, image)), "ẢNH XÁC ĐỊNH Ô ĐIỂM THI");
            Processing.SOLUONGO = rects.size();
            for (int i = 0; i < Processing.SOLUONGO; i++) {
//             MatOfPoint2f frmarker = Processing.CaculateMarkFrame(rects.get(i));
                int demTruMot = 0;

                int ktra[] = new int[110];
                for (int j = 0; j <= 100; j += 5) {
                    ktra[j] = 0;
                }
                for (int a = 0; a < 120; a += 10) {
                    Mat t = null, tct = null;
                    test = Processing.RotateAndCropMarkFrame(ForMarker.findTheRotatedsQuare(rects.get(i)), image);
                    t = AdaptiveThreshold.MakeThreshold(test, mucPNchoOdiem + a);

                    testCaiThien = Processing.RotateAndCropMarkFrame(ForMarker.findTheRotatedsQuare(rects.get(i)), imageCaiThien);
                    tct = AdaptiveThreshold.MakeThreshold(testCaiThien, mucPNchoOdiem + a);
                    diem = Processing.detectingCircle(t, tct);
                    if (diem >= 0) {
                        ktra[(int) (10.0 * diem)]++;
                    } else if ((diem + 1.0) < 0.1) {
                        demTruMot++;
                    }

                }
                String dbg = "";
                double nhnhat = 0, nh = 0;
                for (int j = 0; j <= 100; j += 5) {
                    dbg += "(" + j + " : " + ktra[j] + ") ";
                    if (ktra[j] > nhnhat) {
                        nh = j;
                        nhnhat = ktra[j];
                    }
                }
                nh /= 10;
                System.out.println(dbg);
                if (nhnhat < 1) {
                    diemthi.add(-1.0);
                } else {
                    diemthi.add(nh);
                }

//              test = AdaptiveThreshold.MakeAdaptiveThreshold(test, 19);
//                    displayImage(Mat2BufferedImage(test), "[ Ảnh cắt KHUNG ĐIỂM THI " + i + "] ---- YEAHH");
//                     displayImage(Mat2BufferedImage(testCaiThien), "[ Ảnh cắt KHUNG ĐIỂM THI " + i + "] ---- YEAHH");
//            jLabelDiem.setText(diem+" đ");
            }
            System.out.println("Diem.size: " + diemthi.size());
        } catch (NullPointerException e) {
            e.printStackTrace();
            return false;
        }
        if(diemthi.size()==0)
            return false;
        return true;
    }
    private void btnReadScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadScoreActionPerformed
        table_DSSV.removeAll();
        diemthi.clear();
        for (int exmpn = -10; exmpn <= 40; exmpn += 5) {
            if (TienXuLy(this.mucPhanNguong + exmpn)) {
                if (DocDiem()) {

                    btn_LuuVaoCSDL.setEnabled(true);
                    for (double x : diemthi) {
                        System.out.println("Điểm thi: " + x);
                    }
                    LoadDSSVlen();
                    return;
                }
            }
        }
//        JOptionPane.showMessageDialog(null, "Xử lý ảnh không được!!!", "ERROR", JOptionPane.WARNING_MESSAGE);

        JOptionPane.showMessageDialog(null, "Rất tiếc, Đọc Điểm Thất Bại!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnReadScoreActionPerformed
    void choXemDiem() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Điểm");
        Vector vec;

        for (int i = 0; i < diemthi.size(); i++) {

            vec = new Vector();
            vec.add(diemthi.get(i));
            model.addRow(vec);
        }
        for (int i = diemthi.size(); i < Processing.SOLUONGO; i++) {
            vec = new Vector();
            vec.add("Không có điểm");
            model.addRow(vec);
        }
        table_DSSV.setModel(model);
    }

    void LoadDSSVlen() {
        //===========================[LOAD DSSV LÊN GIAO DIỆN]===========================================
//        fileExcelName ="S-23032021-2b31.xlsx";
//        // Đọc File excel sau khi đã đọc được tên file trên ảnh
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("MSSV/Số Phách");
        model.addColumn("Điểm");
        Vector vec;
        String[] temp = MaTrang.split(" ");
//        dssvCoDiem = DBConection.layDanhSachSVCuaPhieuDiem(Integer.parseInt(temp[0]), Integer.parseInt(temp[1]));//Integer.parseInt(temp[1]));
        dssvCoDiem = DBConection.layDanhSachSVCuaPhieuDiem(Integer.parseInt(temp[0]), Integer.parseInt(temp[1]));
        int id = 0;
        if (dssvCoDiem.size() == 0) {
            lblThongBao.setText("Không Tìm thấy Mã Trang Này Trong Cơ Sở Dữ Liệu - Hãy Nhập Lại Mã Trang Đúng");
            choXemDiem();
            bthCheckTrang.setEnabled(true);
            btn_LuuVaoCSDL.setEnabled(false);
            txt_MaTrang.requestFocus();
            return;
        }
        
        for (SinhVien sv : dssvCoDiem) {

            vec = new Vector();
            vec.add(sv.getMasv());
//            vec.add(sv.getDiem());
            if (diemthi.size() > id) {
                if (diemthi.get(id) < 0) {
                    vec.add("Không có điểm");
                } else {
                    vec.add(diemthi.get(id));
                }
                
            } else {
                vec.add("-------");
            }
            System.out.println("---"+diemthi.size()+"  "+ id);
            model.addRow(vec);
            id++;
        }
        table_DSSV.setModel(model);
    }
    private void txtLinkImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkImgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkImgActionPerformed

    private void txtLinkExlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkExlsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkExlsActionPerformed

    private void btnLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFileActionPerformed
        // TODO add your handling code here:

        btn_XuatFileExCel.setEnabled(false);
        btnPhanTrangAndXuatFile.setEnabled(false);
        btnLayDiem.setEnabled(false);
        try {
            String fileName = FileChooser.GetFileLink();
            if (fileName == null) {
                txtLinkExls.setText("");
                return;

            }
            txtLinkExls.setText(fileName);
            // == Lấy DSSV toàn cục từ xlsx DSSV Thi =============
            listStudent = ExcelConection.layDSSinhVien(fileName);
            // == Có filename toàn cục ===========================
            fileExcelName = fileName;
            for (SinhVien sv : listStudent) {
                System.out.println(sv.getMasv() + " " + sv.getHoten());
            }
            String[] temp = DBConection.chuanHoa(fileName);
            System.out.println(fileName);
            // == Mã Buổi Thi toàn cục.
            buoithiDangXet = new BuoiThi(-1, temp[2], temp[1], Integer.parseInt(temp[0]));
            ExcelConection.ngayThi = temp[1];
            txtNgayThi.setText(ExcelConection.ngayThi);
            // NẾU CHƯA CÓ DSSV CỦA BUỔI THI NÀY TRONG CSDL
            if (buoithiDangXet.checkBuoiThi()) {
                btnPhanTrangAndXuatFile.setEnabled(true);
                btn_XuatFileExCel.setEnabled(false);
            } else {

                btn_XuatFileExCel.setEnabled(true);
                btnPhanTrangAndXuatFile.setEnabled(false);
                btnLayDiem.setEnabled(true);
            }
        } catch (NullPointerException e) {
            jLabel_ThongBaoPhanTrang.setText("Đã có lỗi trong qúa trình load danh sách, hãy kiểm tra lại");
            return;
        }

    }//GEN-LAST:event_btnLoadFileActionPerformed

    private void btnPhanTrangAndXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhanTrangAndXuatFileActionPerformed
        // TODO add your handling code here:
        boolean sucess = DBConection.ThemDanhSachThiVaoDB(listStudent, buoithiDangXet);
        if (sucess) {

            JOptionPane.showMessageDialog(null, "Đã lưu DSSV Vào CSDL", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            btnPhanTrangAndXuatFile.setEnabled(false);
            btn_XuatFileExCel.setEnabled(true);
            //Trước khi xuất excel thì yêu cầu nhập thông tin kỳ thi đã.
            ExcelConection.tenKyThi = txtKiThi.getText().toString().trim();
            ExcelConection.tenHocPhan = txtHocPhan.getText().toString().trim();
            if (ExcelConection.tenKyThi.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bạn phải nhập thông tin kỳ thi để xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                txtKiThi.requestFocus();
                return;
            }
            if (ExcelConection.tenHocPhan.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bạn phải nhập thông tin kỳ thi để xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                txtHocPhan.requestFocus();
                return;
            }

            for (int i = 0; i < listStudent.size(); i += 10) {

                try {

                    // Lúc này i là thứ tự của sinh viên sẽ đưa vào csdl vì  nó là stt trong danh sách
                    // trên excel Và i%10 chính là số trang
                    ExcelConection.GhiDSThiRaTemplateNgang(listStudent, i, buoithiDangXet.mabuoithi, i % 10);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);

                    JOptionPane.showMessageDialog(null, "Xuất danh sách Excel THẤT BẠI!!!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }

            }

            JOptionPane.showMessageDialog(null, "Đã Xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnPhanTrangAndXuatFileActionPerformed

    private void btn_LuuVaoCSDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LuuVaoCSDLActionPerformed
        // TODO add your handling code here:
        String[] temp = MaTrang.split(" ");
        DBConection.updatePhieuDiem(Integer.parseInt(temp[0]), Integer.parseInt(temp[1]), diemthi);
    }//GEN-LAST:event_btn_LuuVaoCSDLActionPerformed

    private void txt_MaTrangInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_MaTrangInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MaTrangInputMethodTextChanged

    private void btn_XuatFileExCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XuatFileExCelActionPerformed
        // TODO add your handling code here:
        //Trước khi xuất excel thì yêu cầu nhập thông tin kỳ thi đã.
        ExcelConection.tenKyThi = txtKiThi.getText().toString().trim();
        ExcelConection.tenHocPhan = txtHocPhan.getText().toString().trim();
        if (ExcelConection.tenKyThi.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn phải nhập thông tin kỳ thi để xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            txtKiThi.requestFocus();
            return;
        }
        if (ExcelConection.tenHocPhan.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Bạn phải nhập thông tin kỳ thi để xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            txtHocPhan.requestFocus();
            return;
        }

        for (int i = 0; i < listStudent.size(); i += 10) {

            try {
                // Lúc này i là thứ tự của sinh viên sẽ đưa vào csdl vì  nó là stt trong danh sách
                // trên excel Và i%10 chính là số trang
                ExcelConection.GhiDSThiRaTemplateNgang(listStudent, i, buoithiDangXet.mabuoithi, i % 10);
            } catch (IOException ex) {

                JOptionPane.showMessageDialog(null, "Xuất danh sách Excel THẤT BẠI!!!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }

        }

        JOptionPane.showMessageDialog(null, "Đã Xuất danh sách Excel", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btn_XuatFileExCelActionPerformed

    private void txtKiThiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKiThiFocusLost
        // TODO add your handling code here:
        ExcelConection.tenKyThi = txtKiThi.getText().toString();
    }//GEN-LAST:event_txtKiThiFocusLost

    private void txtHocPhanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHocPhanFocusLost
        // TODO add your handling code here:
        ExcelConection.tenHocPhan = txtHocPhan.getText().toString();
    }//GEN-LAST:event_txtHocPhanFocusLost

    private void txtHocPhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHocPhanActionPerformed
        // TODO add your handling code here:
        ExcelConection.tenHocPhan = txtHocPhan.getText().toString();
    }//GEN-LAST:event_txtHocPhanActionPerformed

    private void txt_MaTrangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MaTrangKeyTyped
        // TODO add your handling code here:

        MaTrang = txt_MaTrang.getText().toString().trim();
        lblThongBao.setText("");
    }//GEN-LAST:event_txt_MaTrangKeyTyped

    private void bthCheckTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthCheckTrangActionPerformed
        // TODO add your handling code here:
        bthCheckTrang.setEnabled(false);
        LoadDSSVlen();
        
    }//GEN-LAST:event_bthCheckTrangActionPerformed

    private void txtKiThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKiThiActionPerformed
        // TODO add your handling code here:
        ExcelConection.tenKyThi = txtKiThi.getText().toString();
    }//GEN-LAST:event_txtKiThiActionPerformed

    private void btnLayDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLayDiemActionPerformed
        // TODO add your handling code here:
        ArrayList<Float> ds = DBConection.layDiem(buoithiDangXet.mabuoithi);
        for (float x : ds) {

            System.out.println(x);

        }
    }//GEN-LAST:event_btnLayDiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
//        ExcelConection.readFileExcel("emo-ApachePOI-Excel.xlsx");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bthCheckTrang;
    private javax.swing.JButton btnLayDiem;
    private javax.swing.JButton btnLoadFile;
    private javax.swing.JButton btnLoadImg;
    private javax.swing.JButton btnPhanTrangAndXuatFile;
    private javax.swing.JButton btnReadScore;
    private javax.swing.JButton btn_LuuVaoCSDL;
    private javax.swing.JButton btn_XuatFileExCel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelDiem;
    private javax.swing.JLabel jLabel_ThongBaoPhanTrang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblLinkImg;
    private javax.swing.JLabel lblLinkImg1;
    private javax.swing.JLabel lblLinkImg2;
    private javax.swing.JLabel lblLinkImg4;
    private javax.swing.JLabel lblLinkImg5;
    private javax.swing.JLabel lblLinkImg6;
    private java.awt.Label lblThongBao;
    private javax.swing.JTable table_DSSV;
    private javax.swing.JTextField txtHocPhan;
    private javax.swing.JTextField txtKiThi;
    private javax.swing.JTextField txtLinkExls;
    private javax.swing.JTextField txtLinkImg;
    private javax.swing.JTextField txtNgayThi;
    private javax.swing.JTextField txt_MaTrang;
    // End of variables declaration//GEN-END:variables
}
